[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "flama"
version = "0.16.0"
description = "Fire up your API"
authors = ["José Antonio Perdiguero López <perdy@perdy.io>"]
license = "GPL-3.0+"
readme = "README.md"
repository = "https://github.com/perdy/flama"
keywords = ["starlette", "api", "components", "schema", "openapi", "async"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]
include = []
exclude = []

[tool.poetry.dependencies]
python = "^3.7"
starlette = ">=0.14.0,<1.0.0"
marshmallow = {version = "^3.0",optional = true}
python-forge = {version = "^18.6",optional = true}
apispec = {version = "^5.0",optional = true}
databases = {version = "^0.5.3",optional = true}
typesystem = {version = "^0.4.1",optional = true}

[tool.poetry.dev-dependencies]
pytest = "^6.0"
pytest-xdist = "^1.22"
pytest-cov = "^3.0"
clinner = "^1.12"
ipython = "^7.0"
ipdb = "^0.13.9"
isort = "^5.1"
python-multipart = "^0.0.5"
pyyaml = "^5.0"
flake8 = "^3.7"
pytest-asyncio = "^0.10"
sqlalchemy-utils = "^0.37"
mkdocs = "^1.0"
mkdocs-material = "^4.0"
black = {version = "^21.11b1",allow-prereleases = true}
uvicorn = ">=0.10.0,<1.0.0"
aiosqlite = ">=0.11.0,<1.0.0"
requests = "^2.22.0"
Faker = "^8.2.0"
marshmallow = "^3.0"
python-forge = "^18.6"
apispec = "^5.0"
databases = "^0.5.0"
typesystem = "^0.4.1"

[tool.poetry.extras]
typesystem = ["typesystem"]
marshmallow = ["marshmallow","apispec"]
pagination = ["python-forge"]
resources = ["databases"]

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
atomic = true
multi_line_output = 3
include_trailing_comma = true
line_length = 120
skip_glob = [
    "*/.venv/**",
    "*/.tox/**",
    "*/docs/**",
    "*/build/**",
    "*/dist/**",
]

[tool.pytest.ini_options]
minversion = 3
addopts = "--junitxml=./test-results/pytest/results.xml --no-cov-on-fail --cov-report=html --cov-report=xml --cov-report=term-missing --cov-config=pyproject.toml --cov=. --pdbcls=IPython.terminal.debugger:TerminalPdb"
norecursedirs = [
    "*settings*",
    "*urls*",
    ".tox*",
    "*docs*",
]

[tool.coverage.run]
source = [
    "."
]
branch = true
omit = [
    ".venv*",
    "*settings*",
    "*__init__.py",
    "*__main__.py",
    "*tests*",
    "*/migrations/*",
    "make",
    "examples*",
]

[tool.coverage.report]
show_missing = true
ignore_errors = true
fail_under = 95
exclude_lines = [
    "noqa",
    "pragma: no cover",
    "pass",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "def __repr__",
    "def __str__",
    "if cls\\.debug",
    "if settings\\.DEBUG",
    "if (typing\\.)?TYPE_CHECKING:",
]

[tool.coverage.paths]
source = [
    "./"
]

[tool.coverage.html]
directory = "./test-results/coverage_html/"

[tool.coverage.xml]
output = "./test-results/coverage.xml"

[tool.coverage.json]
output = "./test-results/coverage.json"
