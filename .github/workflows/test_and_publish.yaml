name: Test And Publish

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'examples/**'
      - '.github/**'
      - 'docs/**'
      - 'scripts/**'

env:
  DEFAULT_PYTHON: "3.11"

jobs:
  test:
    name: Test (${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ "3.7", "3.8", "3.9", "3.10", "3.11"]
    container:
      image: python:${{ matrix.python }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Commit Linter
        uses: wagoid/commitlint-github-action@v5
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - id: install
        name: Install requirements
        run: |
          pip install pip poetry --upgrade
          ./scripts/install
      - id: black
        name: Code format checking
        run: ./scripts/black --check .
      - id: isort
        name: Imports order checking
        run: ./scripts/isort --check .
      - id: ruff
        name: Code style (ruff)
        run: ./scripts/ruff .
      - id: mypy
        name: Static types check
        run: ./scripts/mypy .
      - id: tests
        name: Tests
        run: ./scripts/test
      - id: codecov
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.2
        # Run on a specific python version and only master branch commits
        if: matrix.python == env.DEFAULT_PYTHON && github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: test-results/coverage.xml
  release:
    needs: test
    name: Release a new version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup poetry
        run: pip install pip poetry --upgrade
      - id: publish
        name: Publish version
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            semantic-release-gitmoji@1.5.0
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
