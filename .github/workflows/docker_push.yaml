name: Docker Push

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Flama version"
        required: true
        type: string

env:
  DEFAULT_LINUX: "slim"
  DEFAULT_PYTHON: "3.11"

jobs:
  docker_push:
    name: Docker Push (${{ matrix.linux }}, ${{ matrix.python }}, ${{ matrix.schemas }})
    environment:
      name: dockerhub
      url: https://hub.docker.com/r/perdy/flama
    runs-on: ubuntu-latest
    strategy:
      matrix:
        linux: ["slim"]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        schemas: ["pydantic", "marshmallow", "typesystem"]
    steps:
      - name: Check out the repo
        uses: actions/checkout@master
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/flama
          flavor: |
            latest=false
          tags: |
            type=raw,enable=true,value=${{ matrix.linux }}-${{ inputs.version }}-python${{ matrix.python }}-${{ matrix.schemas }}
            type=raw,enable=true,value=${{ matrix.linux }}-latest-python${{ matrix.python }}-${{ matrix.schemas }}
            type=raw,enable=${{ matrix.python == env.DEFAULT_PYTHON && 'true' || 'false' }},value=${{ matrix.linux }}-${{ inputs.version }}-${{ matrix.schemas }}
            type=raw,enable=${{ matrix.python == env.DEFAULT_PYTHON && 'true' || 'false' }},value=${{ matrix.linux }}-latest-${{ matrix.schemas }}
            type=raw,enable=${{ matrix.linux == env.DEFAULT_LINUX && 'true' || 'false' }},value=${{ inputs.version }}-python${{ matrix.python }}-${{ matrix.schemas }}
            type=raw,enable=${{ matrix.linux == env.DEFAULT_LINUX && 'true' || 'false' }},value=latest-python${{ matrix.python }}-${{ matrix.schemas }}
            type=raw,enable=${{ matrix.python == env.DEFAULT_PYTHON && (matrix.linux == env.DEFAULT_LINUX && 'true' || 'false') || 'false' }},value=latest-${{ matrix.schemas }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PYTHON_VERSION=${{ matrix.python }}
            SCHEMAS_LIB=${{ matrix.schemas }}
          context: Dockerfiles/${{ matrix.linux }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
